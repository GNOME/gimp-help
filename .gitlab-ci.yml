image: debian:testing

stages:
  - prepare
  - build

variables:
  INSTALL_DIR: "_install"
  INSTALL_PREFIX: "${CI_PROJECT_DIR}/${INSTALL_DIR}"

build-image:
  stage: prepare
  variables:
    GIT_STRATEGY: none
  cache: {}
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - echo "FROM debian:testing" > Dockerfile
    - echo "RUN apt-get update" >> Dockerfile
    - echo "RUN apt-get install -y --no-install-recommends \\" >> Dockerfile
    - echo "automake build-essential docbook-website docbook-xml docbook-xsl fonts-noto-cjk gettext librsvg2-2 librsvg2-bin pkg-config pngcrush pngnq python3 python3-libxml2 xsltproc" >> Dockerfile

    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:build-debian-latest --cache=true --cache-ttl=120h

.build-debian-base:
  stage: build
  image: $CI_REGISTRY_IMAGE:build-debian-latest
  artifacts:
    expire_in: 1 week
    when: always
    paths:
    - www/
    - html/
  script:
    - mkdir _build
    - cd _build
    - ../autogen.sh --prefix=${INSTALL_PREFIX} --without-gimp
    - make && make install
    - mv ${INSTALL_PREFIX}/share/gimp/3.0/help/ ../www/
    - cd ../web
    - make
    - mv /html/ ../html/
    - mkdir ../html/2.99
    - cd ../_build/quickreference
    - mv ./pdf/ ../../html/2.99/pdf/
  timeout: 2 hours 30 minutes
  needs: ["build-image"]

build-debian-1:
  extends: .build-debian-base
  variables:
    LINGUAS: "ca cs da de el en en_GB es"

build-debian-2:
  extends: .build-debian-base
  variables:
    LINGUAS: "fi fr hr it ja ko lt nl"

build-debian-3:
  extends: .build-debian-base
  variables:
    LINGUAS: "nn pt_BR ro ru sl sv zh_CN"
