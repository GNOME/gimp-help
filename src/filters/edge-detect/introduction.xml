<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
          "http://www.docbook.org/xml/4.3/docbookx.dtd">

<!-- section history:
  2007-08-17 Added Spanish translation by AntI
  2007-04-09 KoSt: added 'no'
  2005-08-29 de added by axel.wernicke
-->
<sect2 id="filters-edges-introduction" lang="en;cs;de;es;fr;it;no;ru">
  <sect2info lang="en;de;es;fr;it;no" role="cvs">
    <revhistory>
      <revision lang="en">
        <revnumber>$Revision$</revnumber>
        <date>2006-11-23</date>
        <authorinitials>j.h</authorinitials>
      </revision>
      <revision lang="de">
        <revnumber>$Revision$</revnumber>
        <date>2006-11-23</date>
        <authorinitials>lexa</authorinitials>
      </revision>
      <revision lang="es">
        <revnumber>$Revision$</revnumber>
        <date>2007-08-17</date>
        <authorinitials>AntI</authorinitials>
      </revision>
      <revision lang="fr">
        <revnumber>$Revision$</revnumber>
        <date>2006-11-23</date>
        <authorinitials>j.h</authorinitials>
      </revision>
      <revision lang="it">
        <revnumber>$Revision$</revnumber>
        <date>2008-04-02</date>
        <authorinitials>ciampix</authorinitials>
      </revision>
      <revision lang="no">
        <revnumber>$Revision$</revnumber>
        <date>2007-04-09</date>
        <authorinitials>KoSt</authorinitials>
      </revision>
    </revhistory>
  </sect2info>

  <title>
    <phrase lang="en">Introduction</phrase>
    <phrase lang="cs">Úvod do detekování hran</phrase>
    <phrase lang="de">Einführung</phrase>
    <phrase lang="es">Introducción</phrase>
    <phrase lang="fr">Introduction à la détection des bords</phrase>
    <phrase lang="it">Introduzione</phrase>
    <phrase lang="no">Innleiing</phrase>
    <phrase lang="ru">Введение в выделение края</phrase>
  </title>

  <indexterm lang="en">
    <primary>Filters</primary>
    <secondary>Edge Detect</secondary>
    <tertiary>Introduction</tertiary>
  </indexterm>
  <indexterm lang="en"><primary>Edge-Detect</primary></indexterm>

  <indexterm lang="de">
    <primary>Filter</primary>
    <secondary>Kantenerkennung</secondary>
  </indexterm>

  <indexterm lang="es">
    <primary>Filtros</primary>
    <secondary>Detectar bordes</secondary>
    <tertiary>Introducción</tertiary>
  </indexterm>
  <indexterm lang="es"><primary>Detectar bordes</primary></indexterm>

  <indexterm lang="fr">
    <primary>Filtres</primary>
    <secondary>Détection de bord</secondary>
    <tertiary>Introduction</tertiary>
  </indexterm>
  <indexterm lang="fr"><primary>Détection des bords</primary></indexterm>

  <indexterm lang="it">
    <primary>Filtri</primary>
    <secondary>Rilevamento contorni</secondary>
    <tertiary>Introduzione</tertiary>
  </indexterm>
  <indexterm lang="it"><primary>Introduzione</primary></indexterm>

  <indexterm lang="no">
    <primary>Filter</primary>
    <secondary>Kontur</secondary>
  </indexterm>
  <indexterm lang="no"><primary>Kontur (filter)</primary></indexterm>
  <indexterm lang="no"><primary>Kantfinning = kontur (filter)</primary></indexterm>

  <indexterm lang="ru">
    <primary>Фильтр</primary>
    <secondary>Выделение края</secondary>
  </indexterm>
  <indexterm lang="ru"><primary>Введение</primary></indexterm>

  <para lang="en">
    Edge detect filters search for borders between different colors
    and so can detect contours of objects.
  </para>
  <para lang="en">
    They are used to make selections and for many artistic purposes.
  </para>

  <para lang="cs">
    Filtry detekce hran hledají v obrázku hranice mezi jednotlivými
    barvami, tedy obrysy grafických prvků, ze kterých se obrázek
    skládá.
  </para>
  <para lang="cs">
    Hodí se při tvorbě výběrů a k různým uměleckým záměrům.
  </para>

  <para lang="de">
    Kantenerkennungsfilter sind in der Lage, Kanten zwischen verschiedenen
    Farben und die Umrisse von Objekten aus Bildern zu extrahieren.
  </para>
  <para lang="de">
    Diese Filter können benutzt werden, um Auswahlen zu erstellen und
    verschiedene künstlerische Effekte zu erreichen.
  </para>

  <para lang="es">
    El filtro detectar bordes busca los bordes entre colores diferentes y así
    pueden detectar los contornos de los objetos.
  </para>
  <para lang="es">
    Se usan para hacer selecciones y para otras propuestas artísticas.
  </para>

  <para lang="fr">
    Les filtres de détection des bords recherchent les limites entre
    les couleurs et détectent ainsi le contour des objets.
  </para>
  <para lang="fr">
    Ils sont utilisés pour créer des sélections et dans de
    multiples effets artistiques.
  </para>

  <para lang="it">
    I filtri di rilevamento contorni cercano i confini tra le aree di colore
    differente e quindi trovano i contorni degli oggetti.
  </para>
  <para lang="it">
    Sono utilizzati per creare selezioni e per scopi artistici.
  </para>

  <para lang="no">
    Dette er ei gruppe filter som finn grensene mellom ulike 
    fargeovergangar og bruker desse kantane for å markere 
    konturane (omrisset) av ulike objekt.
  </para>
  <para lang="no">
    Filtra blir gjerne brukte for å lage utval, men også for ulike 
    kunstnariske føremål.
  </para>

  <para lang="ru">
    Фильтры выделения края ищут границы между разными цветами, таким
    образом находя контуры объектов.
  </para>
  <para lang="ru">
    Они используются чтобы указать выделения и для других
    художественных целей.
  </para>

  <mediaobject lang="en;de;es;ru">
    <imageobject>
      <imagedata 
        fileref="../images/filters/filters-edgedetect-fig.png"
        format="PNG" />
    </imageobject>
  </mediaobject>

  <mediaobject lang="cs" >
    <imageobject>
      <imagedata 
        fileref="../images/filters/cs/filters-edgedetect-fig.png"
        format="PNG" />
    </imageobject>
  </mediaobject>

  <mediaobject lang="fr" >
    <imageobject>
      <imagedata 
        fileref="../images/filters/fr/filters-edgedetect-fig-fr.png"
        format="PNG" />
    </imageobject>
  </mediaobject>

  <mediaobject lang="it">
    <imageobject>
      <imagedata
        fileref="../images/filters/it/filters-edgedetect-fig.png"
        format="PNG" />
    </imageobject>
  </mediaobject>

  <mediaobject lang="no" >
    <imageobject>
      <imagedata 
        fileref="../images/filters/no/filters-edgedetect-fig.png"
        format="PNG" />
    </imageobject>
  </mediaobject>

  <para lang="en">
    Most of them are based on gradient calculation methods and give thick
    border lines. Look at fig.1 which represents color intensity
    variations. On the left is a slow color gradient which is not a border.
    On the right is a quick variation which is an edge. Now, let us
    calculate the gradient, the variation speed, of this edge, i.e the first
    derivative (fig.2). We have to decide that a border is detected when
    gradient is more than a threshold value (the exact border is at top of
    the curve, but this top varies according to borders). In most cases,
    threshold is under top and border is thick.
  </para>
  <para lang="en">
    The Laplacian edge detection uses the second derivative (fig.3).
    The top of the curve is now at zero and clearly identified. That's
    why Laplace filter renders a thin border, only a pixel wide. But
    this derivative gives several zeros corresponding to small
    ripples, resulting in false edges.
  </para>
  <para lang="en">
    Some blurring before applying edge filters is often necessary: it
    flattens small ripples in signal and so prevents false edges.
  </para>

  <para lang="cs">
    Většina metod detekce hran je založena na metodách výpočtu gradientu a
    tvoří silné hraniční linie. Podívejte se na graf 1, který vyjadřuje
    změny v intenzitě barev. Vlevo je pozvolný gradient, který hranu
    netvoří. Vpravo je ostrý přechod, který hranu tvoří. Nyní spočítejme
    gradient, rychlost změny na této hraně, čili první derivaci (graf
    2). Je nutno rozhodnou o velikosti prahu, který musí gradient
    přesáhnout, aby byla nalezena hrana (přesná hrana je na vrcholu
    křivky). Ve většině případů je práh pod vrcholem a hrana je silná.
  </para>
  <para lang="cs">
    Laplaceova metoda hledání hran používá druhou derivaci (graf 3).
    Hledaná část křivky protíná nulovou hodnotu a je tedy jasně
    definovaná. Proto Lapalceova metoda vede k tenkým jednopixelovým hranám.
    Druhá derivace však také nabývá nulových hodnot na mnoha místech, kde
    dochází k malým nepravidelnostem, výsledkem jsou falešné hrany.
  </para>
  <para lang="cs">
    Vzniku falešných hran lze zabránit mírným rozostřením obrázku před
    použitím Laplaceova filtru. Drobné nepravidelnosti se rozostří,
    a tak se zabrání vzniku falešných hran.
  </para>

  <para lang="de">
    Die meisten der Filter zur Kantenerkennung basieren auf der Analyse von
    Farbveränderungen und erzeugen dicke Kantenlinien. Beachten Sie den ersten
    Teil der Abbildung (Fig.1), welche die Veränderungen der Farbintensität
    symbolisch darstellt. Auf der linken Seite befinden sich leichte
    Veränderungen, welche keine Kanten darstellen. Auf der rechten Seite sehen
    Sie eine Kante, dargestellt als Änderung der Farbintensität.  Die zweite
    Abbildung (Fig.2) zeigt die Stärke der Veränderung der Farbintensität.
    Dies ist mathematisch betrachtet die erste Ableitung des Graphen im ersten
    Teil der Abbildung. Ein Algorithmus zur Kantenerkennung muss nun
    entscheiden, ab welcher Höhe der Ableitung eine Kante als erkannt gilt.
    Dies entspricht im Wesentlichen der Arbeitsweise des Sobel-Filters.
  </para>
  <para lang="de">
    Der Laplace-Operator verwendet zur Kantenerkennung die zweite Ableitung,
    welche im dritten Teil der Abbildung (Fig.3) zu sehen ist. Die daraus
    entstehenden Kanten sind wesentlich schmaler, meist nur einen Pixel
    breit. Bei kleineren Farbabweichungen können hier jedoch falsch erkannte
    Kanten angezeigt werden.
  </para>
  <para lang="de">
    Gegen diese falsch erkannten Kanten hilft eine leichte Weichzeichnung
    des Bildes vor der Anwendung des Filters.
  </para>

  <para lang="es">
    La mayoria de ellos se basan en métodos de cálculo sobre degradados y
    generan líneas espesas. Mire la fig. 1 que representa las variaciones de
    intensidad de color. A la izquierda, es un degradado lento de color que
    no es un borde. A la derecha, una variación rápida que si es un borde.
    Ahora, calculamos el degradado, la velocidad de variación, de este borde:
    la primera derivada (fig. 2). Hemos decidido que se detecte el borde
    cuando el degradado sea mayor que el valor del umbral (el valor exacto
    está en la cima de la curva, pero está cima varia según los bordes). En
    la mayoria de los casos, el umbral está bajo la cima y el borde es
    espeso.
  </para>
  <para lang="es">
    La detección de bordes Laplace usa una segunda derivada (fig.3). La cima
    de la curva es ahora cero y está claramente identificada. Por eso el
    filtro Laplace representa un borde fino, de solo un píxel de ancho. Pero
    esta derivada genera varios ceros correspondientes a pequeñas
    ondulaciones, dando resultados falsos.
  </para>
  <para lang="es">
    A menudo es necesario desenfocar algo la imagen antes de aplicar el
    filtro detectar bordes, evitando, así, los bordes falsos.
  </para>

  <para lang="fr">
    La plupart d'entre eux sont basés sur des méthodes de calcul de
    gradient et donnent des bordures épaisses. Considérez la figure
    1 qui représente des variations d'intensité de couleur. Sur la
    gauche se trouve un lent dégradé de couleur qui n'est pas un
    bord. Sur la droite, une brusque et importante variation est un
    bord. Maintenant, calculons la pente, la vitesse de variation, de
    ce bord: c'est la dérivée première (fig.2). Nous devons
    décider qu'un bord est détecté quand la pente dépasse un
    certain seuil (le bord se trouve exactement au sommet de la courbe
    mais on ne peut l'utiliser car son niveau varie selon les bords).
    Dans la plupart des cas, le seuil se trouve en dessous du sommet
    et le bord est épais.
  </para>
  <para lang="fr">
    Le filtre de Laplace utilise la dérivée seconde (fig.3). Le
    sommet se retrouve a zéro et est nettement identifié. C'est
    pourquoi ce filtre donne une bordure fine, de 1 pixel. Mais ce
    calcul donne aussi plusieurs autres zéros correspondant aux
    petites rides du signal, ce qui est cause de multiples faux bords
    dans l'image.
  </para>
  <para lang="fr">
    Donner un peu de flou à l'image avant d'appliquer un filtre de
    détection de bords est souvent nécessaire pour éviter ces faux
    bords.
  </para>

  <para lang="it">
    La maggior parte di essi è basata su metodi di calcolo dei gradienti e
    restituisce linee di bordo spesse. Si osservi la figura 1: essa
    raffigura la variazione dell'intensità di colore. Sulla sinistra c'è
    una variazione graduale di colore che non è un margine mentre sulla
    destra c'è invece una variazione rapida del colore che rappresenta un
    margine. Calcoliamo ora il gradiente (la velocità di variazione) di
    questo bordo, cioè la sua derivata prima (figura 2).  Dobbiamo
    innescare la rilevazione del bordo quando il gradiente supera un certo
    valore di soglia (il bordo esatto si trova in corrispondenza della cima
    della curva ma questa cima varia a seconda dei bordi). Nella
    maggioranza dei casi la linea di soglia si trova sotto la cima e il
    bordo corrispondente è spesso.
  </para>
  <para lang="it">
    Il rilevamento contorni laplaciano utilizza la derivata seconda (figura
    3).  La cima della curva corrisponde allo zero è chiaramente
    identificata.  Questo è il motivo per il quale il filtro di Laplace
    restituisce bordi sottili larghi un pixel. Tuttavia questa derivata
    restituirà parecchi zeri corrispondenti a piccole oscillazioni di
    colore che si traducono in falsi bordi.
  </para>
  <para lang="it">
    È spesso conveniente applicare una leggera sfumatura all'immagine prima
    di applicare i filtri di rilevamento dei bordi, perchè questa attenua
    le piccole oscillazioni di colore di conseguenza previene il
    rilevamento di contorni inesistenti o indesiderati.
  </para>

  <para lang="no">
    Dei fleste av desse filtra analyserer fargeskilnadane i biletet og gir
    til dels nokså tykke kantlinjer. Sjå på fig. 1, som viser variasjonar i
    fargeintensitet. Til venstre i figuren forandrar fargen seg lite, og 
    dermed kan ein ikkje finne noen kant her. På høgre sida er
    variasjonane såpass kraftige at vi har funne ein kant. Vi kan 
    rekne ut fargevariasjonane for dette område. Figur 2 viser
    den første avleiinga av desse utrekningane. Vi har her bestemt at
    det finst ein kant når fargevariasjonane er større enn ein sett
    terskelverdi. Den nøyaktige kanten er ved toppen av kurven, men
    denne toppen varierer i høve til grensene. Som oftast er 
    terskelverdien noe lågare enn denne toppen, og resultatet blir
    difor meir eller mindre breie kantar.
  </para>
  <para lang="no">
    Kantfinning med Laplace-metoden bruker den andre avleiinga, 
    figur 3. Toppen av kurva er her null, og såleis klart definert. 
    Dette er forklaringa på at Laplace-filtra teiknar tynne kantar, 
    bare ein piksel tykke. Ulempen er at det blir mange slike nullar
    som tilsvarar små variasjonar, og dermed også 
    <quote>falske</quote> kantar.
  </para>
  <para lang="no">
    Som oftast vil det hjelpe med litegrann sløring før bruk av
    desse filtra. Sløringa flater ut småkrusingane og reduserer 
    mengda av falske kantar.
  </para>

  <para lang="ru">
    Большинство из них использует методы вычисления градиента и даёт
    толстые линии. На рис. 1 показаны изменения в интенсивности цвета.
    Слева показан медленный градиент цвета, не составляющий границу.
    Справа показано быстрое изменение цвета, составляющее границу.
    Давайте вычислим градиент, или скорость изменения, этой границы, то
    есть первую производную (рис 2). Мы должны решить что граница
    считается найденой, если градиент превысит определённый предел
    (точная граница находится вверху кривой, но этот верх зависит от
    границы). В большинстве случаев, предел находится под верхом и
    граница получается широкой.
  </para>
  <para lang="ru">
    Выделение края Лапласа использует вторую производную (рис. 3).
    Верх кривой теперь на нуле и легко виден. Поэтому фильтр Лапласа
    рисует тонкую границу, шириной всего в одну точку. Но эта
    производная даёт несколько нулей, в результате чего получаются
    ложные края.
  </para>
  <para lang="ru">
    Обычно необходимо немного размывания до применения фильтров края:
    размывание удаляет мелкие вариации в изображении и предохраняет от
    выделения ложных краёв.
  </para>

</sect2>
