<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN" "http://www.docbook.org/xml/4.3/docbookx.dtd">
<!-- section history:
  2007-08-20 AntI: added 'es'
  2007-04-14 KoSt: added 'no'
  2005-12-07 replaced <simplesect> by <sect3> by lexa
  050930 de replaced informalfigure by axel.wernicke
  050830 de added by axel.wernicke
-->
<sect2 id="plug-in-nlfilt">
  <sect2info role="cvs">
    <revhistory>
      <revision>
        <revnumber>$Revision$</revnumber>
        <date>2006-11-26</date>
        <authorinitials>j.h</authorinitials>
      </revision>
    </revhistory>
  </sect2info>
  <title>
    <phrase>NL Filter</phrase>
  </title>
  <indexterm>
    <primary>Filters</primary>
    <secondary>Enhance</secondary>
    <tertiary>NL filter</tertiary>
  </indexterm>
  <indexterm>
    <primary>NL Filter</primary>
  </indexterm>
  <sect3>
    <title>
      <phrase>Overview</phrase>
    </title>
    <figure>
      <title>
        <phrase>Example for the NL-Filter</phrase>
      </title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/filters/examples/taj_orig.jpg" format="JPG"/>
        </imageobject>
        <caption>
          <para>Original image</para>
        </caption>
      </mediaobject>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/filters/examples/enhance-taj-nl-filter.jpg" format="JPG"/>
        </imageobject>
        <caption>
          <para><quote>NL Filter</quote> applied</para>
        </caption>
      </mediaobject>
    </figure>
    <para>
      NL means "Non Linear". Derived from the Unix
      <command>pnmnlfilt</command> program, it joins smoothing, despeckle
      and sharpen enhancement functions. It works on the whole image, not
      on the selection.
    </para>
    <para>
      This is something of a swiss army knife filter. It has 3 distinct
      operating modes. In all of the modes each pixel in the image is examined
      and processed according to it and its surrounding pixels values. Rather
      than using 9 pixels in a 3x3 block, it uses an hexagonal block whose
      size can be set with the Radius option.
    </para>
  </sect3>
  <sect3>
    <title>
      <phrase>Activate the filter</phrase>
    </title>
    <para>
      You can find this filter through
      <menuchoice><guimenu>Filters</guimenu><guisubmenu>Enhance</guisubmenu><guimenuitem><accel>N</accel>L Filter</guimenuitem></menuchoice>.
    </para>
  </sect3>
  <sect3>
    <title>
      <phrase>Options</phrase>
    </title>
    <figure>
      <title>
        <phrase><quote>NL Filter</quote> options
        </phrase>
      </title>
      <mediaobject>
        <imageobject>
          <imagedata fileref="images/filters/filters-enhance-nlfilter.png" format="PNG"/>
        </imageobject>
      </mediaobject>
    </figure>
    <variablelist>
      <varlistentry>
        <term>Preview</term>
        <listitem>
          <para>
            When <guilabel>Do preview</guilabel> is checked, parameter
            setting results are interactively displayed in preview.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Parameter settings</term>
        <listitem>
          <para>
            <itemizedlist>
              <listitem>
                <para><guilabel>Alpha</guilabel>: Meaning of this value
                  depends on the selected option.
                </para>
              </listitem>
              <listitem>
                <para><guilabel>Radius</guilabel>:
                  Controls the strength of the filter (0.33-1.00).
                </para>
              </listitem>
            </itemizedlist>
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect3>
  <sect3>
    <title>
      <phrase>Operating Modes</phrase>
    </title>
    <para>
      This filter can perform several distinct functions, depending on
      the value of the parameter <guilabel>alpha</guilabel>.
    </para>
    <variablelist>
      <varlistentry>
        <term>
          Alpha trimmed mean filter. (0.0 &lt;=
          <parameter>alpha</parameter> &lt;= 0.5)
        </term>
        <listitem>
          <para>
            The value of the center pixel will be replaced by the mean of
            the 7 hexagon values, but the 7 values are sorted by size and
            the top and bottom <parameter>alpha</parameter> portion of the 7
            are excluded from the mean. This implies that an
            <parameter>alpha</parameter> value of 0.0 gives the same sort of
            output as a normal convolution (ie. averaging or smoothing
            filter), where <parameter>radius</parameter> will determine the
            "strength" of the filter. A good value to start from for subtle
            filtering is <parameter>alpha</parameter> = 0.0,
            <parameter>radius</parameter> = 0.55.  For a more blatant
            effect, try <parameter>alpha</parameter> 0.0 and
            <parameter>radius</parameter> 1.0.
          </para>
          <para>
            An <parameter>alpha</parameter> value of 0.5 will cause the
            median value of the 7 hexagons to be used to replace the center
            pixel value. This sort of filter is good for eliminating "pop"
            or single pixel noise from an image without spreading the noise
            out or smudging features on the image. Judicious use of the
            <parameter>radius</parameter> parameter will fine tune the
            filtering. Intermediate values of <parameter>alpha</parameter>
            give effects somewhere between smoothing and "pop" noise
            reduction. For subtle filtering try starting with values of
            <parameter>alpha</parameter> = 0.4,
            <parameter>radius</parameter> = 0.6.  For a more blatant effect
            try <parameter>alpha</parameter> = 0.5,
            <parameter>radius</parameter> = 1.0 .
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          Optimal estimation smoothing. (1.0 &lt;=
          <parameter>alpha</parameter> &lt;= 2.0)
        </term>
        <listitem>
          <para>
            This type of filter applies a smoothing filter adaptively over
            the image. For each pixel the variance of the surrounding
            hexagon values is calculated, and the amount of smoothing is
            made inversely proportional to it. The idea is that if the
            variance is small then it is due to noise in the image, while if
            the variance is large, it is because of "wanted" image features.
            As usual the  <parameter>radius</parameter> parameter  controls
            the effective radius, but it probably advisable  to  leave  the
            radius between 0.8 and 1.0 for the variance calculation to be
            meaningful. The <parameter>alpha</parameter> parameter sets the
            noise threshold, over which less smoothing will be done. This
            means that small values of <parameter>alpha</parameter> will
            give the most subtle filtering effect, while large values will
            tend to smooth all parts of the image. You could start with
            values like
            <code><parameter>alpha</parameter>  =  1.2</code>,
            <code><parameter>radius</parameter> = 1.0</code>,
            and try increasing or decreasing the
            <parameter>alpha</parameter> parameter  to  get the desired
            effect. This type of filter is best for filtering out dithering
            noise in both bitmap and color images.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>
          Edge enhancement. (-0.1 &gt;= <parameter>alpha</parameter> &gt;= -0.9)
        </term>
        <listitem>
          <para>
          This is the opposite type of filter to the smoothing filter. It
          enhances edges. The <parameter>alpha</parameter> parameter
          controls the amount of edge enhancement, from subtle (-0.1) to
          blatant (-0.9). The <parameter>radius</parameter> parameter
          controls the effective radius as usual, but useful values are
          between 0.5 and 0.9. Try starting with values of
          <code><parameter>alpha</parameter> = 0.3
          </code>,
          <code><parameter>radius</parameter> = 0.8
          </code>.
        </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Combination use</term>
        <listitem>
          <para>
            The various operating modes can be used one after the other to
            get the desired result. For instance to turn a monochrome
            dithered image into grayscale image you could try one or two
            passes of the smoothing filter, followed by a pass of the
            optimal estimation filter, then some subtle edge enhancement.
            Note that using edge enhancement is only likely to be useful
            after  one  of  the  non-linear filters (alpha trimmed mean or
            optimal estimation filter), as edge enhancement is the direct
            opposite of smoothing.
          </para>
          <para>
            For reducing color quantization noise in images (ie. turning
            .gif files back into 24 bit files) you could try a pass of the
            optimal estimation filter (<parameter>alpha</parameter> 1.2,
            <parameter>radius</parameter> 1.0), a pass of the median filter
            (<parameter>alpha</parameter> 0.5, <parameter>radius</parameter>
            0.55), and possibly a pass of the edge enhancement filter.
            Several passes of the optimal estimation filter with declining
            <parameter>alpha</parameter> values are more effective than a
            single pass with a large <parameter>alpha</parameter> value. As
            usual, there is a trade-off between filtering effectiveness and
            losing detail. Experimentation is encouraged.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect3>
</sect2>
