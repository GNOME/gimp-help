<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
                       "http://www.docbook.org/xml/4.3/docbookx.dtd">
<!-- section history:
  2007-05-03 lexa: added plugin installation info for OS X
  2007-01-28 added Spanish translation by manuq
  2006-09-17 added norwegian translation by KoSt
  2006-07-31 lexa: applied patch from hans de jonge
  2008-02-08 jpl: relecture et légères corrections
-->
<sect1 id="gimp-concepts-plugins">
  <title>Plugins</title>
  <indexterm>
    <primary>Plugins</primary>
    <secondary>Introduction</secondary>
  </indexterm>
  <sect2>
    <title>Introduction</title>
    <para>
      One of the nicest things about <acronym>GIMP</acronym> is how easily its
      functionality can be extended, by using plugins.
      <acronym>GIMP</acronym> plugins are external programs that run under the
      control of the main <acronym>GIMP</acronym> application and interact
      with it very closely. Plugins can manipulate images in almost any way
      that users can. Their advantage is that it is much easier to add a
      capability to <acronym>GIMP</acronym> by writing a small plugin than by
      modifying the huge mass of complex code that makes up the
      <acronym>GIMP</acronym> core. Many valuable plugins have C source code
      that only comes to 100-200 lines or so.
    </para>
    <para>
      Several dozen plugins are included in the main <acronym>GIMP</acronym>
      distribution, and installed automatically along with
      <acronym>GIMP</acronym>. Most of them can be accessed through the
      <guimenu>Filters</guimenu> menu (in fact, everything in that menu is a
      plugin), but a number are located in other menus. In many cases you can
      use one without ever realizing that it is a plugin: for example, the
      "Normalize" function for automatic color correction is actually a
      plugin, although there is nothing about the way it works that would tell
      you this. Even importing and exporting of images is done by plugins.
    </para>
    <para>
      Everyone can write a <acronym>GIMP</acronym> plugin and make it available
      online. There are many useful plugins that can be obtained this way. Some
      of them are described elsewhere in the User's Manual.
    </para>
    <para>
      With this free availability comes a certain degree of risk. The fact that
      anyone can release plugins means that there is no effective quality
      control. The plugins distributed with <acronym>GIMP</acronym> have all
      been tested and tuned by the developers. Additional plugins available
      online, may have been hacked together in a few hours and then
      abandoned. Some plugin creators don't care about robustness, and even for
      those who do, their ability to test on a variety of systems in a variety
      of situations is often quite limited. Basically, when you download a
      plugin, you are getting something for free, and sometimes you get exactly
      what you pay for. This is not to discourage you, just to make sure you
      understand that not all plugins available online will deliver what you
      expect from them.
    </para>
    <warning>
      <para>
        Plugins, being full-fledged executable programs, can do all of the
        things that any other program can do. This includes installing
        back-doors on your system or otherwise compromise its security. Don't
        install a plugin unless it comes from a trusted source.
      </para>
    </warning>
    <note>
      <para>
        Plugins written for a certain version of <acronym>GIMP</acronym> may not
        always work well in other versions. Though in general the
        <acronym>GIMP</acronym> team tries to minimize changes that affect
        plugins. Usually the only time you can expect serious problems with
        plugins, is when the major version of GIMP changes.
        When a plugin made for an older version doesn't work correctly
        anymore, it needs to be ported. Sometimes this is easy, sometimes not.
        Bottom line: before trying to install a plugin, make sure
        that it is compatible with your version of <acronym>GIMP</acronym>.
      </para>
    </note>
  </sect2>

  <sect2>
    <title>Using Plugins</title>
    <para>
      For the most part you can use a plugin like any other
      <acronym>GIMP</acronym> tool, without needing to be aware that it is a
      plugin. But there are a few things about plugins that are useful to
      understand.
    </para>
    <para>
      One is that plugins are generally not as robust as the
      <acronym>GIMP</acronym> core. When <acronym>GIMP</acronym> crashes, it
      is considered a very serious thing: it can cost the user a lot of
      trouble and headache. When a plugin crashes, the consequences are
      usually not as serious. In most cases you can continue working
      without worrying about it too much.
    </para>
    <note>
      <para>
        Because plugins are separate programs, they communicate with
        <acronym>GIMP</acronym> in a special way: The <acronym>GIMP</acronym>
        developers call it <quote>talking over a wire</quote>. When a plugin
        crashes, the communication breaks down, and you may see an error
        message about a <quote>wire read error</quote>.
      </para>
    </note>
    <tip>
      <para>
        When a plugin crashes, <acronym>GIMP</acronym> gives you a very
        ominous-looking message telling you that the plugin may have left
        <acronym>GIMP</acronym> in a corrupted state, and you should consider
        saving your images and exiting. Strictly speaking, this is quite
        correct, because plugins have the power to alter almost anything in
        <acronym>GIMP</acronym>, but for practical purposes, experience has
        shown that corruption is actually quite rare, and many users just
        continue working and don't worry about it. Our advice is that you
        simply think about how much trouble it would cause you if something
        went wrong, and weigh it against the odds.
      </para>
    </tip>
    <para>
      Because of the way plugins communicate with <acronym>GIMP</acronym>,
      they do not have any mechanism for being informed about changes you make
      to an image after the plugin has been started. If you start a plugin,
      and then alter the image using some other tool, the plugin may crash.
      Even if it doesn't, doing this may cause incorrect results. You should
      avoid running more than one plugin at a time on an image, and avoid
      doing anything to the image until the plugin has finished working on it.
      If you ignore this advice, not only could you screw up the image, you
      may also screw up the undo system, so that you won't be able to recover
      from your mistake.
    </para>
  </sect2>

  <sect2 id="gimp-plugins-install">
    <title>Installing New Plugins</title>
    <indexterm>
      <primary>Plugins</primary>
      <secondary>Install</secondary>
    </indexterm>
    <para>
      The plugins that are distributed with <acronym>GIMP</acronym> don't
      require installation. Plugins that you download yourself do.
      Usually the default location is in <acronym>GIMP</acronym>'s user
      directory in a folder under <filename>/plug-ins</filename>, where the
      folder name needs to be the same as the plugin filename.
      You can find the default locations where <acronym>GIMP</acronym> searches
      for plugins in the <link linkend="gimp-prefs-folders-plug-ins">Data
      Folders preferences</link>. There you can also add new locations where
      <acronym>GIMP</acronym> should look for plug-ins.
      There are several scenarios, depending on what OS you are using and how
      the plugin is structured.
    </para>
    <sect3>
      <title>Linux / Unix-like systems</title>
      <para>
        Most plugins fall into two categories: small ones whose source
        code is distributed as a single .c file, and larger ones whose
        source code is distributed as a directory containing multiple
        files including a <filename>Makefile</filename>.
      </para>
      <para>
        For a simple one-file plugin, call it <filename>borker.c</filename>,
        installing it is just a matter of running the command
        <command>gimptool-2.0 --install borker.c</command>. This command
        compiles the plugin and installs it in your personal plugin directory,
        <filename>~/gimp-2.10/plug-ins</filename> unless you have changed it.
        This will cause it to be loaded automatically the next time you start
        <acronym>GIMP</acronym>. You don't need to be root to do these things;
        in fact, you shouldn't be. If the plugin fails to compile, well, be
        creative.
      </para>
    </sect3>

    <sect3>
      <title>Windows</title>
      <para>
        Most <acronym>GIMP</acronym> plugins available on Windows supply either
        an installer, or can be downloaded in a pre-compiled binary format
        ready to copy to a folder of your choice that is recognized by
        <acronym>GIMP</acronym>.
      </para>
      <para>
        If an installer is available, that should do all the work for you
        selecting an appropriate folder and copying all relevant files.
        If not, you may have to check in <acronym>GIMP</acronym>'s folder
        preferences where the plugins should be copied to. Remember, each
        plugin needs to be in its own folder with the same name as the plugin.
      </para>
    </sect3>

    <sect3>
      <title>Apple Mac OS X</title>
      <para>
        How you install plugins on OS X mostly depends on how you installed
        <acronym>GIMP</acronym> itself. If you were one of the brave and
        installed <acronym>GIMP</acronym>
        through one of the package managers like fink
        <xref linkend="bibliography-online-fink"/> or darwinports
        <xref linkend="bibliography-online-darwinports"/>, the
        plugin installation works exactly the way it is described for the
        Linux platform already. The only difference is, that a couple of
        plugins might be even available in the repository of your package
        manager, so give it a try.
      </para>
      <para>
        If, on the other hand, you prefer to grab a prebuilt
        <acronym>GIMP</acronym> package like GIMP.app, you most likely want to
        a prebuilt plugin too. You can try to get a prebuilt version of
        the plugin of your dreams from the author of the plugin. Building your
        own binaries unfortunately involves installing <acronym>GIMP</acronym>.
      </para>
    </sect3>

    <!-- DocBook doesn't allow us to just add para's here after sect3, even
         though the generated html looks perfectly fine.
         Even a simplesect doesn't work here in 4.3, so let's just add
         another sect3.
    -->
    <sect3>
      <title>Running the installed plugin</title>
      <para>
        Once you have installed the plugin, how do you activate it? The menu
        path is determined by the plugin itself, so to answer this you need to
        either look at the documentation for the plugin (if there is any),
        explore the menus, or use <acronym>GIMP</acronym>'s command search
        function by pressing <keycap>/</keycap> and then entering the name of the
        plugin. If you know how to read source code you could also check that to
        see in what menu it registers itself.
      </para>
      <para>
        For more complex plugins, organized as a directory with multiple
        files, there usually is a file inside called either
        <filename>INSTALL</filename> or <filename>README</filename>, with
        instructions. If not, the best advice is to toss the plugin in the
        trash and spend your time on something else: any code written with so
        little concern for the user is likely to be frustrating in myriad
        ways.
      </para>
      <para>
        If you install a plugin in your personal plugin directory that has the
        same name as one in the system plugin directory, only one can be
        loaded, and it will be the one in your home directory. You will
        receive messages telling you this each time you start
        <acronym>GIMP</acronym>. This is probably a situation best avoided.
      </para>
    </sect3>
  </sect2>

  <sect2 id="plugins-write">
    <title>Writing Plugins</title>
    <indexterm>
      <primary>Plugins</primary>
      <secondary>Write</secondary>
    </indexterm>
    <para>
      If you want to learn how to write a plugin, you can find plenty of help
      at the <acronym>GIMP</acronym> Developers web site
      <xref linkend="bibliography-online-gimp-dev-plugin"/>.
      <acronym>GIMP</acronym> is a complex
      program, but the development team has made strenuous efforts to flatten
      the learning curve for plugin writing: there are good instructions and
      examples, and the main library that plugins use to interface with
      <acronym>GIMP</acronym> (called <quote>libgimp</quote>) has a
      well-documented <acronym>API</acronym>. Good programmers, learning by
      modifying existing plugins, are often able to accomplish interesting
      things after just a couple of days of work.
    </para>
  </sect2>
</sect1>
