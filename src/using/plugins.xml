<?xml version='1.0' encoding="UTF-8" ?>

<sect1 id='gimp-plugins'>
  <title lang="en">Plugins</title>
  <title lang="fr">Utiliser Gimp</title>
  <title lang="sv">Använda GIMP</title>
  <title lang="zh_CN">插件</title>
  <indexterm>
    <primary lang="en">The GIMP</primary>
    <primary lang="fr">GIMP</primary>
    <primary lang="sv">GIMP</primary>
    <primary lang="zh_CN">GIMP</primary>
    <secondary lang="en">Plugins</secondary>
    <secondary lang="de">Plugins</secondary>
    <secondary lang="zh_CN">插件</secondary>
  </indexterm>

  <sect2>
    <title lang="en">Introduction</title>
    <title lang="zh_CN">简介</title>
    <para lang="en">
      One of the nicest things about Gimp is how easily its
      functionality can be extended, by using plugins.  Gimp plugins
      are external programs that run under the control of the main
      Gimp application and interact with it very closely.  Plugins can
      manipulate images in almost any way that users can.  Their
      advantage is that it is much easier to add a capability to Gimp
      by writing a small plugin than by modifying the huge mass of
      complex code that makes up the Gimp core.  Many valuable
      plugins have C source code that only comes to 100-200 lines or
      so.  
    </para>

    <para lang="zh_CN">
      Gimp中一件最棒的事就是扩展其功能非常容易，通过插件。Gimp插件是
      一些被主Gimp程序控制并与它紧密交互的外部程序。插件能以用户所能
      做到的几乎是任何方式来处理图像。它们的优势在于通过编写小插件增
      加功能比修改构成Gimp核心冗长而复杂的代码更为容易。许多非常有用
      的插件也就仅仅只有100-200行的C代码。
    </para>
    
    <para lang="en">
      Several dozen plugins are included in the main Gimp
      distribution, and installed automatically along with Gimp.
      Most of them can be accessed through the
      <guimenu>Filters</guimenu> menu (in fact, everything in that
      menu is a plugin), but a number are located in other menus.  In
      many cases you can use one without ever realizing that it is a
      plugin: for example, the "Normalize" function for automatic
      color correction is actually a plugin, although there is nothing
      about the way it works that would tell you this.
    </para>

    <para lang="zh_CN">
      很多插件已经包含在Gimp版本，并随着Gimp自动安装了。通过<guimenu>滤镜</guimenu> 
      菜单(实际上那个菜单中都是插件)能够使用大部分插件，另一部分则在其它菜单中。
      许多情况下，你会用到插件，并且你还没有意识到它是：比如，“标准化”能够自动更正
      色彩的功能实际上就是一个插件，虽然它运行的方式并没有告诉你。
    </para>
    
    <para lang="en">
      In addition to the plugins included with Gimp, many more are
      available on the net.  A large number can be found at the <ulink
      url="http://registry.gimp.org">Gimp Plugin Registry</ulink>, a
      web site whose purpose is to provide a central repository for
      plugins.  Creators of plugins can upload them there; users in
      search of plugins for a specific purpose can search the site in
      a variety of ways.
    </para>

    <para lang="zh_CN">
      除了Gimp附带的插件外，网上还有更多。你能在<ulink url="http://registry.gimp.org">
      Gimp插件注册处</ulink>找到大量插件，该网站的目的就是为插件提供一个中央储藏
      的地方。插件制作者可以上传到这里;寻找完成某些目的插件的用户能用多种方式在这个网
      站搜索。
    </para>
    
    <para lang="en">
      Anybody in the world can write a Gimp plugin and make it
      available over the web, either via the Registry or a personal
      web site, and many very valuable plugins can be obtained in this
      way ­ some are described elsewhere in the User's Manual.  With
      this freedom from constraint comes a certain degree of risk,
      though:  the fact that anybody can do it means that there is no
      effective quality control.  The plugins distributed with Gimp
      have all been tested and tuned by the developers, but many that
      you can download were just hacked together in a few hours and
      then tossed to the winds.  Some plugin creators just don't care
      about robustness, and even for those who do, their ability to
      test on a variety of systems in a variety of situations is often
      quite limited.  Basically, when you download a plugin, you are
      getting something for free, and sometimes you get exactly what
      you pay for.  This is not said in an attempt to discourage you,
      just to make sure you understand reality.
    </para>

    <para lang="zh_CN">
       任何人都能写Gimp插件，然后通过注册处或个人网站在网络上发布，一些非常有
       价值的插件可以就通过这样获得---在用户手册中有一些描述。这种相对的自由有时
       会产生一定的风险。事实上，任何人都可以这样做意味这缺少有效的质量控制。
       Gimp发行版本所附带的插件都是经过开发人员测试和调整过，但是许多你能下载的
       是几小时前才被整理出来，还不稳定。一些插件制作人员并不在乎代码的健壮性。
       即使都那些注意了的人，他们在各种系统中不同情况下的测试能力还非常有限。一般
       来说，当你下载一个插件时，你得到了些实惠，但有时你也要付出代价。这并不是说
       要打击你，只是让你认识到这是事实。
    </para>
    
    <warning lang="en">
      Plugins, being full-fledged executable programs, can do
      any of the things that any other program can do, including
      install back-doors on your system or otherwise compromise its
      security.  Don't install a plugin unless it comes from a trusted
      source. 
    </warning>

    <warning lang="zh_CN">
      插件，作为完整的可执行程序，能做其它任何程序所能做的，包括在你的系统
      上安装后门或其它为害安全的事。不要轻易安装插件除非它的来源是可信任的。
    </warning>  
    
    <para lang="en">
      These caveats apply as much to the Plugin Registry as to any
      other source of plugins.  The Registry is available to any
      plugin creator who wants to use it:  there is no systematic
      oversight.  Obviously if the maintainers became aware that
      something evil was there, they would remove it.  (That hasn't
      happened yet.)  There is, however, for Gimp and its plugins the
      same warranty as for any other free software: namely, none.
    </para>

    <para lang="zh_CN">
      在插件注册处也有和其它插件代码一样的危险。注册处允许任何想使用的插件
      制作者使用：这里并没有系统地监控。显而易见，如果当维护人员意识到那里
      有危险，他会将它们删除。(到目前还没发生过。)尽管如此，对Gimp和其插件
      就像其它自由软件一样：没有担保。
    </para>
    
    <caution lang="en">
      Plugins have been a feature of Gimp for many versions.  However,
      plugins written for one version of Gimp can hardly ever be used
      successfully with other versions.  They need to be ported:
      sometimes this is easy, sometimes not.  Many plugins are
      already available in several versions.  Bottom line: before
      trying to install a plugin, make sure that it is written for
      your version of Gimp.
    </caution> 
    
    <caution lang="zh_CN">
      插件做为Gimp的特性已经存在多个版本中。经管如此，为一个版本所写的插件
      很能在另一个版本中成功使用。它们需要被移植：有时是很容易，有时不是。
      许多插件已经在多个版本中都存在。最后记住：在你开始安装插件前，确认这
      是为你的Gimp版本所写的。
    </caution>
  </sect2>

  <sect2>
    <title lang="en">Using Plugins</title>
    <title lang="zh_CN">使用插件</title>
    <para lang="en">
      For the most part you can use a plugin like any other Gimp tool,
      without needing to be aware that it is a plugin.  But there are
      a few things about plugins that are useful to understand.
    </para>
    
    <para lang="zh_CN">
      大多数情况下，像使用其它Gimp工具一样使用插件，并不需要意识到这是个插件。
      但是这里有些东西了解下对你是有帮助的。
    </para>
    
    <para lang="en">
      One is that plugins are generally not as robust as the Gimp
      core.  When Gimp crashes, it is considered a very serious
      thing: it can cost the user a lot of trouble and headache.  When
      a plugin crashes, the consequences are usually not so serious.
      In most cases you can just continuing working without worrying
      about it.
    </para>

    <para lang="zh_CN">
      一个就是插件一般来健壮性不如Gimp核心。当Gimp崩溃时，这是一件非常
      灾难性的事：它可能给用户带来许多麻烦和痛苦。而当插件死掉时，后果
      就常常并不是那么不堪设想。大多数情况下你能继续你的工作而没有必要
      担心。
    </para>
    
    <note lang="en">
      Because plugins are separate programs, they communicate with the
      Gimp core in a special way:   the Gimp developers call it
      "talking over a wire".  When a plugin crashes, the communication
      breaks down, and you will see an error message about a "wire
      read error".
    </note>

    <note lang="zh_CN">
      因为插件是些独立的程序，它们和Gimp核心通过特殊的方式通信：Gimp开发
      者称其为“taking over a wire”。当插件崩溃时，通信就被中断，你会看到
      出现"wire read error"的错误消息。
    </note>
    
    <tip lang="en">
      When a plugin crashes, Gimp gives you a very ominous-looking
      message telling you that the plugin may have left Gimp in a
      corrupted state, and you should consider saving your images and
      exiting.  Strictly speaking, this is quite correct, because
      plugins have the power to alter almost anything in Gimp, but for
      practical purposes, experience has shown that corruption is
      actually quite rare, and many users just continue working and
      don't worry about it.  Our advice is that you simply think about
      how much trouble it would cause you if something went wrong, and
      weigh it against the odds.
    </tip>

    <tip lang="zh_CN">
      当插件崩溃时，Gimp显示一条看上去可怕的消息高诉你插件在崩溃的边缘，
      考虑是保存图像还是退出。严格来说，这非常正确，因为插件几乎有能力
      改变Gimp中任何东西，但是实际上，经验表明这种崩溃却是很少发生，很
      多用户继续工作而并不担心。我们的建议是，考虑如果出错会给你带来多
      少麻烦，然后自己恒量后再决定。
    </tip>
    
    <para lang="en">
      Because of the way plugins communicate with Gimp, they do not
      have any mechanism for being informed about changes you make to
      an image after the plugin has been started.  If you start a
      plugin, and then alter the image using some other tool, the
      plugin will often crash, and when it doesn't will usually give a
      bogus result.  You should avoid running more than one plugin at
      a time on an image, and avoid doing anything to the image until
      the plugin has finished working on it.  If you ignore this
      advice, not only will you probably screw up the image, you will
      probably screw up the undo system as well, so that you won't
      even be able to recover from your foolishness.
    </para>

    <para lang="zh_CN">
      因为插件和Gimp通信的这种方式，它们没有任何在插件启动后通报对图像所
      做的改变的机制。当你开始使用一个插件而同时用其它工具来改变图像时，
      插件常常就会崩溃，即使没有，也常常给你一个错误的结果。你应该避免同
      时对图像运行一个以上的插件，并且不要对图像做任何操作直到插件处理完
      毕。要是你忽略这些建议，不光你处理的图像要遭殃，重做系统也可能受到
      破坏，到那时你就无法从你的所干的蠢事中恢复了。
    </para>    
  </sect2>

  <sect2 id='gimp-plugins-install'>
    <title lang="en">Installing New Plugins</title>
    <title lang="zh_CN">安装新插件</title>
    <para lang="en">
      The plugins that are distributed with Gimp don't require any
      special installation.  Plugins that you download yourself do.  
      There are several scenarios,
      depending on what OS you are using and how the plugin is
      structured.  In Linux it is usually pretty easy to install a new
      plugin; in Windows, it is either easy or very hard.  In any
      case, the two are best considered separately.
    </para>

    <para lang="zh_CN">
      Gimp发行版本所附带的插件不需要任何特别的安装。而那些你自己下载的则
      需要。这有一些方法，它们依赖与你使用何种操作系统以及插件的结构。在
      Linux下，安装新插件常常是相当简单的;在Windows下，要么简单要么非常
      难。不管怎么说，最好把它们单独分开讨论。
    </para>  
    <simplesect>
      <title lang="en">Linux</title>
      <title lang="zh_CN">Linux</title>
      <para lang="en">
        Most plugins fall into two categories: small ones whose source
        code is distributed as a single .c file, and larger ones whose
        source code is distributed as a directory containing multiple
        files including a Makefile.
      </para>

      <para lang="zh_CN">
        大部分插件可划分为两类：源代码由单个的.c文件构成的比较小的一类和源代
	码由多个文件和一个Makefile包含在一个目录中的比较大的一类。
      </para>
      
      <para lang="en">
        For a simple one-file plugin, call it
        <filename>borker.c</filename>, installing it is just a
        matter of running the command <command>gimptool-2.0 --install
        borker.c</command>.    This command compiles the plugin and
        installs it in your personal plugin directory,
        <filename>~/gimp-2.0/plugins</filename> unless you have
        changed it.  This will cause it to be loaded automatically the
        next time you start Gimp.  You don't need to be root to do
        these things; in fact, you shouldn't be.  If the plugin fails
        to compile, well, be creative.
      </para>

      <para lang="zh_CN">
        对单个文件的插件，比如叫<filename>borker.c</filename>，通过命令
	<command>gimptool-2.0 --install borker.c</command> 来安装它。该
	命令编译插件然后安装到你的个人插件目录中，<filename>~/gimp-2.0/plugins</filename>
	除非你已经改变。这将使下次启动Gimp时自动载入。你不需要root权限来
	干这些事;实际上，你也不应当这样。当然如果插件编译失败，那就是另
	外一回事了。
      </para>
      
      <para lang="en">
        Once you have installed the plugin, how do you activate it?
        The menu path is determined by the plugin itself, so to answer
        this you need to either look at the documentation for the
        plugin (if there is any), or explore the menus until you find
        it, or look at the source code---whichever is easiest.
      </para>

      <para lang="zh_CN">
        可是一旦你安装完毕，如何运行它们呢？其菜单的位置有插件本身决定。
	所以要回答这个问题，你可以通过看插件的文档(如果有的话)，或查看
	菜单直到你找到它，或是看其源代码---这或许是最简单的。
      </para>
      
      <para lang="en">
        For more complex plugins, organized as a directory with
        multiple files, there ought to be a file inside called either
        INSTALL or README, with instructions.  If not, the best advice
        is to toss the plugin in the trash and spend your time on
        something else:  any code written with so little concern for
        the user is likely to be frustrating in myriad ways.
      </para>

      <para lang="zh_CN">
        对于包装成一个目录的复杂些的插件，一般其中都有INSTALL或README这
	个文件，其中有安装指令。如果没有，最好将这些插件放入回收站而把
	时间花在另外的上面：这种毫不关心用户的代码将使人感到非常沮丧。
      </para>
      
      <para lang="en">
        Some plugins (specifically those based on the Gimp Plugin
        Template) are designed to be installed in the main system Gimp
        directory, rather than your home directory.  For these, you
        will need to be root to perform the final stage of
        installation ("make install").
      </para>

      <para lang="zh_CN">
        一些插件(特别是那些基于Gimp插件模板的)被设计为安装到Gimp主系统
	目录中，而不是你个用户目录下。这时，你需要变为root来完成安装的
	最后一步("make install")。
      </para>
      
      <para lang="en">
        If you install in your personal plugin directory a plugin that
        has the same name as one in the system plugin directory, only
        one can be loaded, and it will be the one in your home
        directory.  You will receive messages telling you this each
        time you start Gimp.  This is probably a situation best
        avoided. 
      </para>

      <para lang="zh_CN">
        如果安装在个人插件目录中插件和在系统插件目录中的有相同的名字，
	就只有一个被载入，那就是在你用户目录中的。当你每次启动Gimp时，
	你都会收到消息告知你这些。因此可能最好要避免这种情况发生。
      </para>
    </simplesect>

    <simplesect>
      <title lang="en">Windows</title>
      <title lang="zh_CN">Windows</title>
      <para lang="en">
        Windows is a much more problematic environment for building
        software than Linux.  Every decent Linux distribution comes
        fully supplied with tools for compiling software, and they are
        all very similar in the way they work, but Windows does not
        come with such tools.  It is possible to set up a good
        software-building environment in Windows, but it requires
        either a substantial amount of money or a substantial amount
        of effort and knowledge.
      </para>

      <para lang="zh_CN">
        Windows是一个在编软件方面比Linux更难捉摸的环境。现在每个Linux发行
	版本提供完整的编译软件工具，而且它们运作的方式也差不多。但是
	Windows并步附带这些工具。虽然有可能在Windows中建立一个很好编软件
	的环境，但是需要要么有足够的金钱，要么有大量的知识并耗费相当的精力。
      </para>	
      <para lang="en">
        What this means in relation to Gimp plugins is the following:
        either you have an environment in which you can build
        software, or you don't.  If you don't, then your best hope is
        to find a precompiled version of the plugin somewhere (or
        persuade somebody to compile it for you), in
        which case you simply need to put it into your personal plugin
        directory.  If you do have an environment in which you can
        build software (which for present purposes means an
        environment in which you can build Gimp), then you no doubt
        already know quite a bit about these things, and just need
        to follow the Linux instructions.
      </para>

      <para lang="zh_CN">
         在关于Gimp插件中，意味着：要么你有编软件的环境，要么没有。如果
	 没有，最好希望能找到在某处找到一个已经编译好的版本(或说服某人
	 帮你编译)，然后你只需要简单地把其放到你的个人插件目录下。如果
	 你确实有编软件地环境(这里是指你能编译Gimp),也就是说你毫无疑问
	 已经知道不少这方面的东西了，所以只需要跟着Linux的指令做。
      </para>
      
      <para lang="en">
        If you would like to set up a build environment, and are ready
        for the heroism involved, you can find a reasonably recent
        description of how to go about it in the Gimp Wiki, at <ulink
        url="http://wiki.gimp.org/gimp/HowToCompileGimp_2fMicrosoftWindows">
        HowToCompileGimp/MicrosoftWindows </ulink>.  Since it is a
        Wiki, anybody is free to edit it, so please keep it up to date
        by adding advice based on your own experiences.
      </para>

      <para lang="zh_CN">
        如果你想建立一个编软件环境，并准备无所畏惧地投入其中，你可以在Gimp Wiki
	中找到一个适当的当前关于如何开始的介绍 <ulink url="http://wiki.gimp.org/gimp/HowToCompileGimp_2fMicrosoftWindows">
	HowToCompileGimp/MicrosoftWindows </ulink>。由于这是个Wiki,任何人都可以
	编辑它，所以请添加基于你自己经验的建议，以便让它保持最新。
      </para>	
    </simplesect>

    <simplesect>
      <title lang="en">Macintosh</title>
      <title lang="zh_CN">Macintosh</title>
      <para lang="en">
        We could use some material here.
      </para>

      <para lang="zh_CN">
        我们可以使用这儿的一些材料。
      </para>	
    </simplesect>
  </sect2>

  <sect2>
    <title lang="en">Writing Plugins</title>
    <title lang="zh_CN">写插件</title>
    <para lang="en">
      If you want to learn how to write a plugin, you can find plenty
      of help at the Gimp Developers web site, <ulink
      url="http://developer.gimp.org/plug-ins.html">
      developer.gimp.org</ulink>.  Gimp is a complex program, but the
      development team has made strenuous efforts to flatten the
      learning curve for plugin writing:  there are good instructions
      and examples, and the main library that plugins use to interface
      with Gimp (called "libgimp") has a well-documented API.  Good
      programmers, learning by modifying existing plugins, are often
      able to accomplish interesting things after just a couple of
      days of work.
    </para>

    <para lang="zh_CN">
      如果你想知道如何写插件，你能在Gimp开发者网站上找到些有用的帮助，
      <ulink url="http://developer.gimp.org/plug-ins.html">developer.gimp.org</ulink>。
      Gimp是一个复杂的程序，但是开发者团队作出了艰辛的工作使写插件的
      学习曲线变得平坦：许多好的步骤指令和范例，Gimp的主库作为其插件
      接口(叫"libgimp)有一个拥有好的完整文档的API。好的程序员，通过学
      习已有的插件，常常只需几天的工作就能完成一些很有趣的东西。
     </para> 
  </sect2>

</sect1>
