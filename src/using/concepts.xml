<?xml version='1.0' encoding="UTF-8" ?>

<sect2 id='gimp-using-concepts'>
  <title lang="en">Basic Gimp Concepts</title>
  <indexterm>
    <primary lang="en">The GIMP</primary>
    <secondary lang="en">Concepts</secondary>
  </indexterm>

    <para lang="en">
      This section is intended to give you a brief introduction to the
      basic concepts and terminology you will need to understand in
      order to make sense to the rest of the documentation.  Everything
      here is explained in much greater depth elsewhere.  With a few
      exceptions, we have avoided cluttering this section with a lot of
      links and cross-references: everything mentioned here is so
      high-level that you should easily be able to locate it in the
      index. 
    </para>

  <variablelist>
  <varlistentry>
    <term lang="en">Overview</term>
    <listitem>
    <para lang="en">
      The Gimp is an
      image manipulation program.  At the most sweeping level, using
      Gimp involves three basic 
      steps:  (1) opening images or creating new ones; (2) altering
      those images; (3) saving the results.  
    </para>
    <variablelist>
      <varlistentry>
	<term lang="en">Opening Images</term>
	<listitem>
	  <para lang="en">
            Depending on how Gimp was started, there may already be
            one or more images open when you begin.  You can open new
            images from files using the <link
            linkend='gimp-file-open'>Open</link> command from the File
            menu.  Gimp is capable of opening a large variety of
            graphics file formats; see <link
            linkend='gimp-using-fileformats'>Files</link> for more information.
            Depending on how your system is set up, you may also be
            able to open images by clicking on icons in a file
            manager, or by drag-and-drop from other programs.  If you
            aren't sure whether you can do this, just try it.  The
            worst thing that can happen is that your computer could
            explode. 
          </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term lang="en">Altering Images</term>
	<listitem>
	  <para lang="en">
            Gimp provides you with an enormous number of ways of
            acting on images:  painting tools, color manipulation
            tools, transformation tools, filters, etc.  The bulk of
            this manual is devoted to describing these tools and how
            to work with them.
          </para>
	</listitem>
      </varlistentry>
      <varlistentry>
	<term lang="en">Saving Images</term>
	<listitem>
	  <para lang="en">
            When you are finished working with an image, you will want
            to save the results.  (In fact, it is often a good idea to
            save at intermediate stages too:  Gimp is a pretty robust
            program, but we have heard rumors, possibly apocryphal,
            that it may have been known on rare and mysterious
            occasions to crash.)  Most of the file formats that Gimp
            can open, can also be used for saving.  There is one file
            format that is special, though:  XCF is Gimp's native
            format, and is useful because it stores
            <emphasis>everything</emphasis> about an image (well,
            almost everything; it does not store "undo" information).
            Thus, the XCF format is especially suitable for saving
            intermediate results, and for saving images to be
            re-opened later in Gimp.  XCF files are not readable by
            most other programs that display images, so once you have
            finished, you will probably also want to save the image in
            a more widely used format, such as JPEG, PNG, TIFF, etc.    
          </para>
	</listitem>
      </varlistentry>
    </variablelist>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term lang="en">Images</term>
    <listitem>
    <para lang="en">
      Images are the basic entities that Gimp works with.  Roughly
      speaking, an "image" corresponds to a single file, such as a TIFF
      or JPEG file.  You can also think of an image as corresponding
      to a single display window, but this is not quite correct:  it
      is possible to have multiple windows all displaying the same
      image.  It is not possible to have a single window display more
      than one image, though, or for an image to have no window
      displaying it.
    </para>

    <para lang='en'>
      A Gimp image may be quite a complicated thing.  Instead of
      thinking of it as something like a sheet of paper with a picture
      on it, you should think of it as more like a book, whose pages
      are called "layers".  In addition to a stack of layers, a Gimp
      image may contain a selection mask, a set of channels, and a set
      of paths.  In fact, Gimp provides a mechanism for attaching
      arbitrary pieces of data to an image, as what are called
      "parasites". 
    </para>

    <para lang='en'>
      In Gimp, it is possible to have many images open at the same
      time.  If they are large, each image may use many megabytes of
      memory, but Gimp uses a sophisticated tile-based memory
      management system that allows it to handle even very large
      images gracefully.  There are, however, limits, and it is
      usually beneficial when working with images to put as much
      memory into your system as possible.
    </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term lang="en">Layers</term>
    <listitem>
    <para lang="en">
      If an image is like a book, then a layer is like a page within
      the book.  The simplest images only contain a single layer, and
      can be treated like single sheets of paper, but sophisticated
      Gimp users often deal with images containing many layers, even
      dozens of them.  Layers need not be opaque, and they need not
      cover the entire extent of an image, so when you look at an
      image's display, you may see more than just the top layer:  you
      may see elements of many layers.
    </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term lang="en">Channels</term>
    <listitem>
    <para lang="en">

    </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term lang="en">Selections</term>
    <listitem>
    <para lang="en">
      Often when you do something to an image, you only want a part of
      it to be affected.  The "selection" mechanism makes this
      possible.  Each image has its own selection, which you normally
      see as an moving dashed line separating the selected parts
      from the unselected parts (the so-called "marching ants").
      Actually this is a bit misleading:  selection in Gimp is really
      graded, not all-or-nothing, and really the selection is
      represented by a full-fledged grayscale channel.  The dashed
      line that you normally see is simply a contour line at the
      50%-selected level.  At any time, though, you can visualize the
      selection channel in all its glorious detail by toggling the
      <link linkend='gimp-qmask'>QuickMask</link>
      button. 
    </para>
    <para lang='en'>
      A large component of learning how to use Gimp effectively is
      acquiring the art of making good selections---selections that
      contain exactly what you need and nothing more.  Because
      selection-handling is so centrally important, Gimp gives you a
      large number of tools for doing it:   an assortment of
      selection-making tools, a menu of selection operations, and the
      ability to switch to Quick Mask mode, in which you can treat the
      selection channel as though it were a color channel, thereby
      "painting the selection".   
    </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term lang="en">Undoing</term>
    <listitem>
    <para lang="en">
      When you make mistakes, you can undo them.  Nearly
      everything you can do to an image is undoable.  In fact, you can
      usually undo a substantial number of the most recent things you
      did, if you decide that they were misguided.  Gimp makes this
      possible by keeping a history of your actions.  This history
      consumes memory, though, so undoability is not infinite.  Some
      actions use very little undo memory, so that you can do dozens
      of them before the earliest ones are deleted from this history;
      other types of actions require massive amounts of undo memory.
      You can configure the amount of memory Gimp allows for the undo
      history of each image, but in any situation, you should always
      be able to undo at least your 2-3 most recent actions.  (The
      most important action that is not undoable is closing an image.
      For this reason, Gimp asks you to confirm that you really want
      to close the image if you have made any changes to it.)
    </para>
    </listitem>
  </varlistentry>


  <varlistentry>
    <term lang="en">Plug-ins</term>
    <listitem>
    <para lang="en">
      Many, probably most, of the things you do to an image in Gimp
      are done by the Gimp application itself.  However, Gimp also
      makes extensive use of "plug-ins", which are external programs
      that interact very closely with Gimp, and are capable of
      manipulating images and other Gimp objects in very sophisticated
      ways.  Many important plug-ins come packaged together with Gimp,
      but there are also many available by other means.  In fact, the
      ability to write plug-ins (and scripts) is the easiest way for
      people not on the Gimp development team to add new capabilities
      to Gimp.
    </para>
    <para lang='en'>
      All of the commands in the Filters menu, and a substantial
      number of commands in other menus, are actually implemented by
      plug-ins. 
    </para>
    </listitem>
  </varlistentry>

  <varlistentry>
    <term lang="en">Scripts</term>
    <listitem>
    <para lang="en">
      In addition to plug-ins, which are programs written in the C
      language, Gimp can also make use of scripts.  The largest number
      of existing scripts are written in a language called Script-Fu,
      which is special to Gimp (for those who care, it is a dialect of
      the Lisp-like language called Scheme).  It is also possible to
      write Gimp scripts in Python or Perl.  These languages are more
      flexible and powerful than Script-Fu; their disadvantage is that
      they depend on software that does not automatically come
      packaged with Gimp, so they are not guaranteed to work correctly
      in every Gimp installation.
    </para>
    </listitem>
  </varlistentry>
  </variablelist>

</sect2>
