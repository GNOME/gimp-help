<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect1 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
          "http://www.docbook.org/xml/4.3/docbookx.dtd">
<!--section history:
  2018-06-08 j.h Created empty
  2019-12-20 Elad Shahar - first text version/
-->

<sect2 id="python-fu-histogram-export">
  <title>Export Histogram</title>

  <indexterm>
    <primary>Colors</primary>
    <secondary>Export Histogram</secondary>
  </indexterm>
  <indexterm>
    <primary>Export Histogram</primary>
  </indexterm>

  <sect3>
    <title>Overview</title>
    <para>
      Exports the image histogram to a text file, so it can be used by other programs
      and loaded into spreadsheets.
      The histogram is produced for the selected image area. Fully transparent pixels are not counted.
    </para>
    <para>
      The resulting file is a CSV file (Comma Separated Values), which can be imported directly
      in most spreadsheet programs. The first row of the CSV file is a title row. One data row is
      generated for each "Bucket". Each pixel value can be in the range of 0 to 255, and will
      be included in one of the buckets depending on the bucket's range.
    </para>
    <para>
      The first column is titled "Range Start" and contains the starting value of the bucket.
      The following columns contain the values for different channels. Which channels will
      be included depends on the image type. The meaning of the values in each of the channel
      columns, depends on the <guilabel>Output Format</guilabel> option.
    </para>
    <figure>
      <title>Example of file exported by <quote>Export Histogram</quote></title>
      <screen>
Range start,   Value,   Red,   Green,   Blue
          0,     0.0,   0.0,   486.0,    0.0
          1,     0.0,   0.0,   300.0,    0.0
          2,     0.0,   0.0,   336.0,    0.0
          3,     0.0,   0.0,   399.0,    0.0
          4,     0.0,   0.0,   510.0,    0.0
          ....
      </screen>
    </figure>
    <para>
      The example file above was generated for an RGB image, using the
      <guilabel>Pixel count</guilabel> output format, and a <guilabel>Bucket Size</guilabel> of 1.
      The row starting with the number 3
      describes the fourth bucket and will include all pixels from value 3 up to (but not
      including) value 4. The number 399.0 in that row can then be interpreted as "There
      are 399 pixels that have a Green value of 3".
    </para>
  </sect3>

  <sect3>
    <title>Activating the Filter</title>
    <para>
      This filter is found in the main menu under
      <menuchoice>
        <guimenu>Colors</guimenu>
        <guisubmenu>Info</guisubmenu>
        <guimenuitem>Export histogramâ€¦</guimenuitem>
      </menuchoice>.
    </para>
  </sect3>

    <sect3>
    <title>Options</title>
    <figure>
      <title><quote>Export Histogram</quote> options</title>
      <mediaobject>
        <imageobject>
          <imagedata format="PNG"
            fileref="images/menus/colors/info/histogram-export-dialog.png"/>
        </imageobject>
      </mediaobject>
    </figure>
    <variablelist>
      <varlistentry>
        <term>Histogram File</term>
        <listitem>
          <para>
            The file into which the histogram will be exported.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Bucket Size</term>
        <listitem>
          <para>
            The <guilabel>Bucket Size</guilabel> lets you control the number
            of values considered as similar and counted in the same
            <quote>bucket</quote>. A higher bucket size will produce less buckets, and thus
            less rows in the exported file. For example, a Bucket Size of 1 will produced 256
            buckets, whereas a bucket size of 16 will produce 16 buckets.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Sample Average</term>
        <listitem>
          <para>
            If <guilabel>Sample Average</guilabel> is activated, the histogram will be generated
            for an image obtained by merging all visible layers. Otherwise, the histogram will
            only consider the current layer.
          </para>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>Output format</term>
        <listitem>
          <para>
            If the <guilabel>Pixel count</guilabel> option is chosen, the values in the generated
            file will reflect the amount of pixels in each bucket.
            If <guilabel>Normalized</guilabel> is chosen, the values will be the amount of
            pixels in the bucket divided by the total amount of pixels.
            The <guilabel>Percent</guilabel> option is
            similar to  <guilabel>Normalized</guilabel>, but the values are formatted as percents.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect3>

</sect2>
