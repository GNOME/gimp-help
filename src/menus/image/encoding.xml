<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sect2 PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
                       "http://www.docbook.org/xml/4.3/docbookx.dtd">
<sect2 id="gimp-image-encoding">
  <title><quote>Encoding</quote> Submenu</title>

  <indexterm>
    <primary>Image</primary>
    <secondary>Encoding</secondary>
  </indexterm>
  <indexterm>
    <primary>Encoding</primary>
  </indexterm>
  <indexterm>
    <primary>Image</primary>
    <secondary>Precision</secondary>
  </indexterm>
  <indexterm>
    <primary>Precision</primary>
  </indexterm>

  <para>
    The <guimenuitem>Encoding</guimenuitem> submenu contains commands which
    let you change the encoding of the image. These options affect the
    precision and channel encoding used for storing the image in RAM during
    processing.
  </para>

  <sect3>
    <title>Activating the Submenu</title>
    <para>
      You can access this submenu from the main menu through
      <menuchoice>
        <guimenu>Image</guimenu>
        <guimenuitem>Encoding</guimenuitem>
      </menuchoice>.
    </para>
  </sect3>

  <sect3>
    <title>The Contents of the <quote>Encoding</quote> Submenu</title>
    <variablelist>
      <para>
        The Encoding submenu is divided into two parts: precision and channel
        encoding.
      </para>

      <varlistentry id="gimp-image-precision">
        <term>Precision</term>
        <listitem>
          <para>
            The precision at which image data is stored is a function of the
            bit depth (8-bit vs 16-bit vs 32-bit) and whether the data is
            stored as integer data or floating point data. The following choices
            are available:
          </para>
          <orderedlist>
            <listitem>
              <itemizedlist>
                <title>Integer precision options</title>
                <listitem>
                  <anchor id="gimp-image-convert-u8"/>
                  <para>
                    <guimenuitem>8-bit integer</guimenuitem>
                  </para>
                  <note>
                    <para>
                      When choosing to convert an image which has a 32-bit
                      floating point precision to 8-bit integer, a
                      <link linkend="gimp-image-convert-precision">conversion
                      dialog</link> will open that will ask you to choose
                      dithering settings.
                    </para>
                  </note>
                </listitem>
                <listitem>
                  <anchor id="gimp-image-convert-u16"/>
                  <para>
                    <guimenuitem>16-bit integer</guimenuitem>
                  </para>
                </listitem>
                <listitem>
                  <anchor id="gimp-image-convert-u32"/>
                  <para>
                    <guimenuitem>32-bit integer</guimenuitem>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
            <listitem>
              <itemizedlist>
                <title>Floating point precision options</title>
                <listitem>
                  <anchor id="gimp-image-convert-half"/>
                  <para>
                    <guimenuitem>16-bit floating point</guimenuitem>
                  </para>
                </listitem>
                <listitem>
                  <anchor id="gimp-image-convert-float"/>
                  <para>
                    <guimenuitem>32-bit floating point</guimenuitem>
                  </para>
                </listitem>
              </itemizedlist>
            </listitem>
          </orderedlist>
        </listitem>
      </varlistentry>

      <varlistentry>
        <term>Channel Encoding (Gamma)</term>
        <listitem>
          <anchor id="gimp-image-convert-gamma"/>
          <para>
            The Encoding menu also allows you to choose a
            <link linkend="glossary-channel-encoding">channel encoding</link>
            for the image data (sometimes referenced as gamma). Currently there
            are two choices:
          </para>
          <itemizedlist>
            <listitem>
              <para>
                <guimenuitem>Linear light</guimenuitem>, which encodes the
                channel data using the linear gamma TRC.
              </para>
            </listitem>
            <listitem>
              <para>
                <guimenuitem>Non-linear</guimenuitem>, which encodes the
                channel data in non-linear gamma using the chosen color profile
                for the image.
              </para>
            </listitem>
          </itemizedlist>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect3>

  <sect3 id="gimp-image-choosing-precision-encoding">
    <title>Choosing the image precision and channel encoding</title>
    <note>
      <para>
        Regardless of which options you choose in the Encoding menu,
        all internal processing is done at 32-bit floating point precision,
        and most editing operations are done using Linear light channel
        encoding.
      </para>
    </note>
    <para><emphasis role="bold">Which Encoding options should you
    choose?</emphasis> In a nutshell:</para>
    <orderedlist>
      <listitem>
        <para>
          To take full advantage of GIMP's internal 32-bit
          floating point processing, choose 32-bit floating point precision and
          also choose the Linear light channel encoding.
        </para>
      </listitem>
      <listitem>
        <para>
          If you are editing on a machine with limited RAM,
          or if you are editing very large images and layer stacks, consider
          using 16-bit floating point or integer precision.
        </para>
      </listitem>
      <listitem>
        <para>
          If you want to take advantage of high bit depth image editing, but
          you don't want to deal with floating point channel values, then use
          16-bit integer precision.
        </para>
      </listitem>
      <listitem>
        <para>
          When soft-proofing an image, switch to Non-linear channel encoding
          to avoid certain problems with soft-proofing a linear gamma image
          using Little CMS.
        </para>
      </listitem>
      <listitem>
        <para>
          On a less powerful machine with a limited amount of RAM, consider
          using 8-bit integer precision, in which case also choose the
          Non-linear channel encoding (which is the default for 8-bit).
          At 8-bit precision, if you choose the Linear light channel encoding,
          your image will have horribly posterized shadows.
        </para>
      </listitem>
    </orderedlist>
  </sect3>

  <sect3>
    <title>More information about the Precision options</title>
    <orderedlist>
      <listitem>
        <para>
          <emphasis role="bold">Choosing the bit depth
          (8-bit vs 16-bit vs 32-bit):</emphasis>
        </para>
      <itemizedlist>
        <listitem>
          <para>
            The bit depth of an image sets limits on how much
            precision is available when processing your image files. All things
            being equal, higher bit depths provide more precision.
          </para>
        </listitem>
        <listitem>
          <para>
            The bit depth of an image file partially determines how
            much RAM is required for processing. The higher the bit depth, the more
            RAM is required to store data during image processing. Other relevant
            factors include the size of the image layers and the number of layers
            in the layer stack.
          </para>
        </listitem>
      </itemizedlist>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Choosing between integer and
          floating point precision:</emphasis>
        </para>
      <itemizedlist>
        <listitem>
          <para>
            Floating point precision is required for taking full advantage of
            high bit depth using GIMP's internal 32-bit floating point
            processing. Floating point precision allows for the generation and
            use of channel values that fall outside the
            <link linkend="glossary-display-referred">display-referred range</link>
            from 0.0 ("display black") to 1.0 ("display white"), thus making
            possible very useful editing possibilities such as unbounded ICC
            profile conversions and
            <link linkend="glossary-high-dynamic-range">High Dynamic Range</link>
            <link linkend="glossary-scene-referred">scene-referred</link>
            editing operations.
          </para>
        </listitem>
        <listitem>
          <para>
            Unlike floating point precision, integer precision
            cannot store channel values outside the display range. So choosing an
            integer precision from the Encoding menu means that all floating
            point channel values produced during processing are clipped to fit
            within the equivalent floating point range between 0.0 and 1.0
            inclusively:
          </para>
          <itemizedlist>
            <listitem>
              <para>
                8-bit integer values are clipped to the range 0-255.
              </para>
            </listitem>
           <listitem>
             <para>
               16-bit integer values are clipped to the range 0-65535.
             </para>
           </listitem>
           <listitem>
             <para>
               32-bit integer values are clipped to the range 0-4294967295.
             </para>
           </listitem>
          </itemizedlist>
        </listitem>
        <listitem>
          <para>
            At any given bit depth, all things being equal
            integer precision is more precise than floating point precision.
            So 16-bit integer precision is more precise than 16-bit floating point
            precision, and 32-bit integer precision is more precise than 32-bit
            floating point precision. However, in GIMP you don't get more
            precision by choosing 32-bit integer over 32-bit floating point:
            GIMP still does all internal processing using 32-bit floating point
            precision even if you choose 32-bit integer precision in the
            Encoding menu. Remember, the Precision menu choices only determine
            how the image information is held in RAM.
          </para>
        </listitem>
        <listitem>
          <para>
            At any given bit depth, integer and floating point
            precision use approximately the same amount of RAM for internal
            calculations during image processing, and also require about the
            same amount of disk space when saving an image file to disk.
          </para>
        </listitem>
        </itemizedlist>
      </listitem>
      <listitem>
        <para>
          <emphasis role="bold">Choosing between Linear light and Non-linear
          channel encoding:</emphasis>
        </para>
        <itemizedlist>
          <listitem>
            <para>
              At 8-bit precision, if you choose the Linear light channel
              encoding your image will have horribly posterized shadows.
              So don't use Linear light unless you also choose a higher bit
              depth.
            </para>
          </listitem>
          <listitem>
            <para>
              When soft-proofing, currently the gamut check will not return
              correct results if the image is at Linear light precision.
              So change to Non-linear before activating soft-proofing.
            </para>
          </listitem>
          <listitem>
            <para>
              Other than the fact that Linear light channel encoding is not
              suitable for 8-bit editing or for soft-proofing, from a user
              perspective the channel encoding you choose in the
              Precision menu won't have much effect on your workflow:
            </para>
            <itemizedlist>
              <listitem>
                <para>
                  Currently if you choose "Linear light", then linear gamma
                  channel values are displayed in the "pixel" values when
                  using the Color Picker Tool, Sample Points, and
                  Pointer dialogs. If you choose "Non-linear", then
                  perceptually uniform channel values are displayed instead.
                </para>
              </listitem>
              <listitem>
                <para>
                  Currently the channel encoding that you choose makes a
                  difference in the wrong colors that you might see if you
                  check <xref linkend="gimp-image-color-profile-use-srgb"/> and
                  your image isn't already in one of the GIMP built-in sRGB
                  color spaces (but with either channel encoding choice, the
                  colors are still wrong).
                </para>
              </listitem>
              <listitem>
                <para>The only other way in which the channel encoding chosen in
                the Encoding menu might affect your workflow, has to do with
                the effects of using the "Gamma hack" found in the Advanced
                Color Options.
                </para>
              </listitem>
            </itemizedlist>
          </listitem>
        </itemizedlist>
      </listitem>
    </orderedlist>
  </sect3>

  <sect3 id="gimp-image-convert-precision">
    <title>The Image Encoding Conversion Dialog</title>
    <para>
      For most precision conversions this dialog will only ask how
      <guilabel>Gamma</guilabel> should be set. However, for conversion
      from 32-bit float precision to 8-bit integer, the below dialog will
      be shown that also asks for <guilabel>Dithering</guilabel>.
    </para>
    <figure>
      <title>
        The <quote>Precision</quote> conversion dialog for 32-bit float to
        8-bit integer
      </title>
      <mediaobject>
        <imageobject>
          <imagedata format="PNG"
            fileref="images/menus/image/precision-conversion-dialog.png"/>
        </imageobject>
      </mediaobject>
    </figure>
    <variablelist>
      <varlistentry>
        <term>Gamma</term>
        <listitem>
          <para>
            The <guilabel>Gamma</guilabel> choices are explained in the
            <link linkend="gimp-image-choosing-precision-encoding">
            Channel Encoding</link> options.
          </para>
        </listitem>
      </varlistentry>

      <varlistentry id="gimp-image-convert-dithering">
        <term>Dithering</term>
        <listitem>
          <para>
            When reducing the precision from 32-bit floating point to 8-bit
            integer, you will lose some details. This can cause color banding,
            where there is an obvious jump from one color to another where
            there shouldn't be. Using dithering can be a way to reduce this.
            Dithering is a way of adding noise to an image to prevent banding
            and other unwanted patterns. The different dithering methods use
            different ways to add the noise.
          </para>
          <para>
            There are three <guilabel>Dithering</guilabel> settings: for normal
            Layers, Text Layers, and Channels and Masks.
            For each you can set the type of dithering to use. The different
            dithering modes are explained in the
            <link linkend="gimp-filter-dither-method">Dithering Method</link>
            option of the Dither filter.
          </para>
          <para>
            In general, you probably won't use dithering for Text layers,
            since that will cause the text information to be lost, meaning
            it becomes a normal layer. I would first try conversion without
            any dithering, and if there are any noticeable artifacts, you
            can try using dithering on normal layers.
          </para>
        </listitem>
      </varlistentry>
    </variablelist>
  </sect3>

</sect2>
